// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
	"tlan-trust-spaces/v3/pkg/utils"
)

type ConversationListItem struct {
	CreatedDate     time.Time `json:"createdDate"`
	ID              string    `json:"id"`
	LastMessageDate time.Time `json:"lastMessageDate"`
	Read            bool      `json:"read"`
	Subject         string    `json:"subject"`
}

func (c ConversationListItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConversationListItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ConversationListItem) GetCreatedDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedDate
}

func (o *ConversationListItem) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConversationListItem) GetLastMessageDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.LastMessageDate
}

func (o *ConversationListItem) GetRead() bool {
	if o == nil {
		return false
	}
	return o.Read
}

func (o *ConversationListItem) GetSubject() string {
	if o == nil {
		return ""
	}
	return o.Subject
}
