// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Attributes struct {
	FolderID string `json:"folderId"`
}

func (o *Attributes) GetFolderID() string {
	if o == nil {
		return ""
	}
	return o.FolderID
}

type Document struct {
	Content  []byte `multipartForm:"content"`
	FileName string `multipartForm:"name=document"`
}

func (o *Document) GetContent() []byte {
	if o == nil {
		return []byte{}
	}
	return o.Content
}

func (o *Document) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

type UploadDocumentRequestBody struct {
	Attributes Attributes `multipartForm:"name=attributes,json"`
	Document   Document   `multipartForm:"file"`
}

func (o *UploadDocumentRequestBody) GetAttributes() Attributes {
	if o == nil {
		return Attributes{}
	}
	return o.Attributes
}

func (o *UploadDocumentRequestBody) GetDocument() Document {
	if o == nil {
		return Document{}
	}
	return o.Document
}

// UploadDocumentResponseBody - Upload successful
type UploadDocumentResponseBody struct {
	DocumentID *string `json:"documentId,omitempty"`
}

func (o *UploadDocumentResponseBody) GetDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

type UploadDocumentResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Upload successful
	Object *UploadDocumentResponseBody
}

func (o *UploadDocumentResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UploadDocumentResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UploadDocumentResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UploadDocumentResponse) GetObject() *UploadDocumentResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
